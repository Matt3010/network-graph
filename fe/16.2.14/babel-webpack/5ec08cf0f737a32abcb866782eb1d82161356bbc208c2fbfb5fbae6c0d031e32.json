{"ast":null,"code":"import { environment } from \"../environments/environment\";\nimport { BehaviorSubject, map } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"./token.service\";\nimport * as i4 from \"@angular/router\";\nexport let ManagerService = /*#__PURE__*/(() => {\n  class ManagerService {\n    constructor(http, toastrService, tokenService, router) {\n      this.http = http;\n      this.toastrService = toastrService;\n      this.tokenService = tokenService;\n      this.router = router;\n      this.manager$ = new BehaviorSubject([]);\n      this.apiUrl = environment.api_url + '/cloud';\n    }\n    navigate(dir_to_go) {\n      this.http.get(this.apiUrl + '/' + dir_to_go).pipe(map(res => {\n        if (res) return res.data;else return null;\n      })).subscribe(res => {\n        if (res.length === 0) {\n          this.router.navigateByUrl('pages/cloud');\n          this.navigate('');\n        }\n        this.manager$.next(res);\n      });\n    }\n    deleteFile(path) {\n      console.log(path);\n      this.http.delete(`${this.apiUrl}/file/` + path).subscribe(res => {});\n    }\n    deleteDir(path) {\n      console.log(path);\n      this.http.delete(`${this.apiUrl}/dir/` + path).subscribe(res => {});\n    }\n    static #_ = this.ɵfac = function ManagerService_Factory(t) {\n      return new (t || ManagerService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ToastrService), i0.ɵɵinject(i3.TokenService), i0.ɵɵinject(i4.Router));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ManagerService,\n      factory: ManagerService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ManagerService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}